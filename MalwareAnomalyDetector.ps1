# Step 7: Malware & Anomaly Detection Forensic Script

# Run this line selection first:
Set-ExecutionPolicy RemoteSigned -Scope Process

$timestamp = Get-Date -Format "yyyy-MM-dd_HH-mm-ss"
$hostname = $env:COMPUTERNAME
$outputDir = "D:\ForensicScripts\Step7_AnomalyDetection_$hostname`_$timestamp"
New-Item -Path $outputDir -ItemType Directory -Force | Out-Null

# Autoruns locations (basic Windows auto-start locations)
Write-Output "[+] Collecting autoruns..."
Get-ItemProperty 'HKLM:\Software\Microsoft\Windows\CurrentVersion\Run' | Out-File "$outputDir\Autoruns_HKLM_Run.txt"
Get-ItemProperty 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Run' | Out-File "$outputDir\Autoruns_HKCU_Run.txt"

# WMI Persistence
Write-Output "[+] Collecting WMI persistent events..."
Get-WmiObject -Namespace root\subscription -Class __EventFilter | Out-File "$outputDir\WMI_EventFilters.txt"
Get-WmiObject -Namespace root\subscription -Class __EventConsumer | Out-File "$outputDir\WMI_EventConsumers.txt"
Get-WmiObject -Namespace root\subscription -Class __FilterToConsumerBinding | Out-File "$outputDir\WMI_FilterToConsumerBindings.txt"

# Scheduled Tasks
Write-Output "[+] Collecting scheduled tasks..."
schtasks /query /fo LIST /v > "$outputDir\ScheduledTasks.txt"

# Suspicious unsigned processes
Write-Output "[+] Checking for unsigned running processes..."
$processes = Get-CimInstance Win32_Process
$unsignedReport = "$outputDir\UnsignedProcesses.txt"
foreach ($proc in $processes) {
    try {
        $path = $proc.ExecutablePath
        if ($path -and (Test-Path $path)) {
            $sig = Get-AuthenticodeSignature -FilePath $path
            if ($sig.Status -ne 'Valid') {
                "$($proc.Name) [$($proc.ProcessId)] - $path - Signature: $($sig.Status)" | Out-File -Append $unsignedReport
            }
        }
    } catch {
        "Error accessing process path: $($_.Exception.Message)" | Out-File -Append $unsignedReport
    }
}

# Suspicious binaries in TEMP folders
Write-Output "[+] Scanning TEMP folders for recent binaries..."
Get-ChildItem -Path $env:TEMP -Recurse -Include *.exe,*.dll,*.bat,*.ps1 -ErrorAction SilentlyContinue | \
    Sort-Object LastWriteTime -Descending | \
    Select-Object FullName, Length, LastWriteTime | \
    Out-File "$outputDir\TempSuspiciousFiles.txt"

# Zip the results
Write-Output "[+] Compressing output..."
$zipFile = "D:\ForensicScripts\Step7_AnomalyDetection_$hostname`_$timestamp.zip"
Compress-Archive -Path $outputDir -DestinationPath $zipFile -Force

Write-Output "âœ… Step 7 complete. Output saved to: $zipFile"
